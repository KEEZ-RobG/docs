"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[7924],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),u=a,h=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return r?n.createElement(h,s(s({ref:t},p),{},{components:r})):n.createElement(h,s({ref:t},p))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6477:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(3117),a=(r(7294),r(3905));const o={sidebar_position:2},s="Schemas",i={unversionedId:"tools/erc725js/schemas",id:"tools/erc725js/schemas",title:"Schemas",description:"The @erc725/erc725.js library contains a range of standard LSP ERC725 JSON schemas.",source:"@site/docs/tools/erc725js/schemas.md",sourceDirName:"tools/erc725js",slug:"/tools/erc725js/schemas",permalink:"/tools/erc725js/schemas",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/tools/erc725js/schemas.md",tags:[],version:"current",lastUpdatedAt:1658794893,formattedLastUpdatedAt:"Jul 26, 2022",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"toolsSidebar",previous:{title:"Getting Started",permalink:"/tools/erc725js/getting-started"},next:{title:"Providers",permalink:"/tools/erc725js/providers"}},c={},l=[{value:"Standard LSP Schemas",id:"standard-lsp-schemas",level:2}],p={toc:l};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"schemas"},"Schemas"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"@erc725/erc725.js")," library contains a range of standard ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md"},"LSP ERC725 JSON schemas"),"."),(0,a.kt)("p",null,"Schemas allow erc725.js to know how to decode and encode data written in an ",(0,a.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-725"},"ERC725Y")," smart contract."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"A quick reference for keys used in schema definitions can be seen below")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md"},"Official Documentation"),"."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name"),": An arbitrary name"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"key"),": The sha3 hash of the name"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"keyType"),": One of the supported erc725 keyTypes"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"valueContent"),": The described content type for parsing"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"valueType"),": The type of the content data in store for decoding")),(0,a.kt)("h2",{id:"standard-lsp-schemas"},"Standard LSP Schemas"),(0,a.kt)("p",null,"The most common schemas of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/tree/main/LSPs"},"LUKSO Standard Proposals")," are available under the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ERC725Alliance/erc725.js/tree/develop/schemas"},(0,a.kt)("inlineCode",{parentName:"a"},"schemas/"))," folder."),(0,a.kt)("p",null,"Current provided LSPs are:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"LSP1UniversalReceiverDelegate.json\nLSP3UniversalProfileMetadata.json\nLSP4DigitalAssetLegacy.json\nLSP4DigitalAsset.json\nLSP5ReceivedAssets.json\nLSP6KeyManager.json\nLSP9Vault.json\nLSP10ReceivedVaults.json\nLSP12IssuedAssets.json\n")),(0,a.kt)("p",null,"You can import them from:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import LSP3 from '@erc725/erc725.js/schemas/LSP3UniversalProfileMetadata.json';\nimport LSP5 from '@erc725/erc725.js/schemas/LSP5ReceivedAssets.json';\n// ...\n\n// Later use them on instantiation\nconst myErc725Contract = new ERC725js(LSP3, address, web3.currentProvider);\n")))}m.isMDXComponent=!0}}]);