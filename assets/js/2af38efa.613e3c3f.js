"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[67],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>f});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function s(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},s=Object.keys(t);for(r=0;r<s.length;r++)a=s[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(r=0;r<s.length;r++)a=s[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var l=r.createContext({}),c=function(t){var e=r.useContext(l),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},p=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,s=t.originalType,l=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),m=c(a),f=n,k=m["".concat(l,".").concat(f)]||m[f]||d[f]||s;return a?r.createElement(k,i(i({ref:e},p),{},{components:a})):r.createElement(k,i({ref:e},p))}));function f(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var s=a.length,i=new Array(s);i[0]=m;var o={};for(var l in e)hasOwnProperty.call(e,l)&&(o[l]=e[l]);o.originalType=t,o.mdxType="string"==typeof t?t:n,i[1]=o;for(var c=2;c<s;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9394:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=a(3117),n=(a(7294),a(3905));const s={title:"Interfaces IDs",sidebar_position:2},i="Interfaces IDs",o={unversionedId:"standards/smart-contracts/interface-ids",id:"standards/smart-contracts/interface-ids",title:"Interfaces IDs",description:"Interfaces IDs help check if a contract supports a specific interface, e.g., its meta-interface. They are helpful if we want to interact with a contract but don't know if it supports an interface such as ERC725Y, LSP1UniversalReceiver, etc.",source:"@site/docs/standards/smart-contracts/interface-ids.md",sourceDirName:"standards/smart-contracts",slug:"/standards/smart-contracts/interface-ids",permalink:"/standards/smart-contracts/interface-ids",draft:!1,editUrl:"https://github.com/lukso-network/docs/tree/main/docs/standards/smart-contracts/interface-ids.md",tags:[],version:"current",lastUpdatedAt:1654680985,formattedLastUpdatedAt:"Jun 8, 2022",sidebarPosition:2,frontMatter:{title:"Interfaces IDs",sidebar_position:2},sidebar:"standardsSidebar",previous:{title:"Introduction",permalink:"/standards/smart-contracts/introduction"},next:{title:"ERC725",permalink:"/standards/smart-contracts/erc725-contract"}},l={},c=[],p={toc:c};function d(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"interfaces-ids"},"Interfaces IDs"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Interfaces IDs")," help check if a contract supports a specific interface, e.g., its meta-interface. They are helpful if we want to interact with a contract but don't know if it supports an interface such as ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-725.md#erc725y"},"ERC725Y")),", ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-1-UniversalReceiver.md"},"LSP1UniversalReceiver")),", etc."),(0,n.kt)("p",null,"The ",(0,n.kt)("strong",{parentName:"p"},"supportsInterface")," function from the ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"https://eips.ethereum.org/EIPS/eip-165"},"ERC165"))," standard returns ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," if the standard is supported, ",(0,n.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("em",{parentName:"p"},"Interface IDs are not the most secure way to ensure that a contract implements a specific set of functions, as they are manually set and can be set to any value."))),(0,n.kt)("p",null,"Interface IDs can be easily accessed in your code using the ",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@lukso/lsp-smart-contracts"},"LSP smart contract NPM package")," as follows. The accessible interface IDs can be found in the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/lsp-smart-contracts/blob/main/constants.js"},"constants.js file")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'import { INTERFACE_IDS } from "@lukso/lsp-smart-contracts/constants.js"\n\nconst ERC725X_ID = INTERFACE_IDS.ERC725X\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Contract"),(0,n.kt)("th",{parentName:"tr",align:"left"},"InterfaceId"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"ERC1271")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0x1626ba7e")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Standard Signature Validation Method for Contracts.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"ERC725X")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0x44c028fe")),(0,n.kt)("td",{parentName:"tr",align:"left"},"General executor.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"ERC725Y")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0x714df77c")),(0,n.kt)("td",{parentName:"tr",align:"left"},"General Data key-value store.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"LSP0ERC725Account")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0x9a3bfe88")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Account that represent an identity on-chain")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"LSP1UniversalReceiver")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0x6bb56a14")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Universal Receiver entry function.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"LSP1UniversalReceiverDelegate")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0xa245bbda")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Universal Receiver delegated to an other smart contract.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"LSP6KeyManager")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0xc403d48f")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Controller for the ERC725Account.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"LSP7DigitalAsset")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0xe33f65c3")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Digital Assets either fungible or non-fungible. ",(0,n.kt)("em",{parentName:"td"},"ERC20 A-like"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"LSP8IdentifiableDigitalAsset")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0x49399145")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Identifiable Digital Assets (NFT). ",(0,n.kt)("em",{parentName:"td"},"ERC721 A-like"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"LSP9Vault")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"0x8c1d44f6")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Vault that could interact with other smart contracts and hold assets.")))))}d.isMDXComponent=!0}}]);